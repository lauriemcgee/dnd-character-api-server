<!DOCTYPE html>
<html>
<head>
        <meta charset="utf-8">
        <title>Magic</title>
        <!-- <style src="css/test.css"></style> -->
        <link rel="stylesheet" href="css/test.css">
        <!-- Behavioral Meta Data -->
        <meta name="apple-mobile-web-app-capable" content="yes">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
        <meta name="keywords" content="parallax,javascript,jquery,zepto,plugin">
        <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
</head>
<body>
  <div id="container" class="wrapper">
    <div id="scene" class="scene unselectable"
      data-friction-x="0.1"
      data-friction-y="0.1"
      data-scalar-x="25"
      data-scalar-y="15">
        <div class="layer" data-depth="0.00"><img src="img/background1.png"></div>
        <div class="layer" data-depth=".10"></div>
        <div class="layer" data-depth="0.2"><img src="img/clouds2.png"></div>
        <div class="layer" data-depth="0.25"><img src="img/clouds9.png"></div>
        <div class="layer" data-depth="0.30"><img src="img/cloud1.png"></div>
        <div class="layer" data-depth="0.35"><img src="img/clouds8.png"></div>
    </div>
    <div id="app">  
      <transition name="fade">
        <div class="content" v-if="showCharClass">
            <ul v-for="charClass in charClasses" v-bind:key="charClass.id">
                <input type="radio" v-bind:value="charClass.name" v-model="charClassChoice">
                  <label for="charClass.id">{{ charClass.name }}</label>
                <br>
            </ul>
            <span>You really wanna be a: {{ charClassChoice }}</span>
            <button v-on:click="selectCharClassChoice()">Yup, yeah I do</button>
        </div>
      </transition>
      <transition name="fade">
        <div class="content" v-if="showRace">
          <ul v-for="race in races" v-bind:key="race.id">
              <input type="radio" v-bind:value="race.name" v-model="raceChoice">
                <label for="race.id">{{ race.name }}</label>
              <br>
          </ul>
          <span>You really wanna be a: {{ raceChoice }}</span>
          <button v-on:click="selectRace()">Yup, yeah I do</button>
        </div>
      </transition>
      <transition name="fade">
        <div class="content" v-if="showAlignment">
          <ul v-for="alignment in alignments" v-bind:key="alignment.id">
              <input type="radio" v-bind:value="alignment.name" v-model="alignmentChoice">
                <label for="alignment.id">{{ alignment.name }}</label>
              <br>
          </ul>
          <span>You really wanna be a: {{ alignmentChoice }}</span>
          <button v-on:click="selectAlignment()">Yup, yeah I do</button>
        </div>
      </transition>
      <transition name="fade">
        <div class="content" v-if="showBackground">
          <ul v-for="background in backgrounds" v-bind:key="background.id">
              <input type="radio" v-bind:value="background.name" v-model="backgroundChoice">
                <label for="background.id">{{ background.name }}</label>
              <br>
          </ul>
          <span>You really wanna be a: {{ backgroundChoice }}</span>
          <button v-on:click="selectBackground()">Yup, yeah I do</button>
        </div>
      </transition>
      <transition name="fade">
        <div class="content" v-if="getUserInfo">
          <div>
            <h3> What's your name? </h3>
            <input v-model="userName" type="text"></input>
          </div>
          <div>
            <h3>What's your Character's name? </h3>
            <input v-model="charName" type="text"></input>
          </div>
          <div>
            <input type="submit" value="submit" v-on:click="buildCharacter()">
          </div>
      </transition>
    </div>
  </div>
 

      <!-- Scripts -->
      <script src="js/parallax.js"></script>
      <script>
      // Pretty simple huh?
      var scene = document.getElementById('scene');
      var parallax = new Parallax(scene);
      </script>

</body>
</html>
